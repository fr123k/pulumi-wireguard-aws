#!/bin/bash -v

export DEBIAN_FRONTEND=noninteractive

# Setup ssh user
useradd -m -s /bin/bash -G sudo frank.ittermann
mkdir -p /home/frank.ittermann/.ssh/
echo "frank.ittermann ALL=(ALL) NOPASSWD:ALL" >/etc/sudoers.d/frank_ittermann
chmod 0440 /etc/sudoers.d/frank_ittermann

mv /root/.ssh/authorized_keys /home/frank.ittermann/.ssh/authorized_keys
chmod 600 /home/frank.ittermann/.ssh/authorized_keys
chown -R frank.ittermann:frank.ittermann /home/frank.ittermann

# Hardening ssh
sed -i -e '/^PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config
sed -i 's|[#]*PasswordAuthentication yes|PasswordAuthentication no|g' /etc/ssh/sshd_config
sed -i -e '$aAllowUsers frank.ittermann' /etc/ssh/sshd_config

systemctl reload sshd.service

# Setup fail2ban
apt-get install fail2ban
systemctl enable fail2ban

apt-get update -y
apt-get upgrade -y
apt-get install -y wireguard-dkms wireguard-tools pwgen

umask 077
#TODO make server public key available outside the vm instance
wg genkey | tee /tmp/server_privatekey | wg pubkey > /tmp/server_publickey

MYV4IP=$(curl {{ METADATA_URL }})

cat > /etc/wireguard/wg0.conf <<- EOF
[Interface]
Address = $MYV4IP/24
PrivateKey = $(cat /tmp/server_privatekey)
ListenPort = 51820
PostUp   = iptables -A FORWARD -i %i -j ACCEPT; iptables -A FORWARD -o %i -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
PostDown = iptables -D FORWARD -i %i -j ACCEPT; iptables -D FORWARD -o %i -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE

[Peer]
PublicKey = {{ CLIENT_PUBLICKEY }}
AllowedIPs = {{ CLIENT_IP_ADDRESS }}/32
PersistentKeepalive = 25
EOF

chown -R root:root /etc/wireguard/
chmod -R og-rwx /etc/wireguard/*
sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/' /etc/sysctl.conf
sysctl -p
ufw allow http
ufw allow ssh
ufw allow 51820/udp
ufw --force enable

# enable debug logging of wireguard
echo module wireguard +p > /sys/kernel/debug/dynamic_debug/control

systemctl enable wg-quick@wg0.service
systemctl restart wg-quick@wg0.service

MAILJET_AUTH="{{ MAILJET_API_CREDENTIALS }}"

if [ "$MAILJET_AUTH" != "" ]; then

    # TODO make the list of emails configurable per client ip
    cat > /tmp/wireguard.email <<- EOF
    {
    "Messages":[
        {
        "From": {
            "Email": "wireguard@fr123k.uk",
            "Name": "Wireguard $MYV4IP"
        },
        "To": [
            {
            "Email": "fr12_k@yahoo.com",
            "Name": "Frank"
            }
        ],
        "Subject": "Wireguard publickey",
        "TextPart": "The wireguard public key is $(cat /tmp/server_publickey) and the ip address $MYV4IP",
        "CustomID": "Wireguard Publickey"
        }
    ]
    }
EOF

    curl -s -X POST \
    --user "${mailjet_api_credentials}" \
    https://api.mailjet.com/v3.1/send \
    -H 'Content-Type: application/json' \
    --data "@/tmp/wireguard.email"
fi
