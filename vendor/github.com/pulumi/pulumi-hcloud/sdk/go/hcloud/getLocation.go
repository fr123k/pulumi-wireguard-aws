// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package hcloud

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides details about a specific Hetzner Cloud Location.
// Use this resource to get detailed information about specific location.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-hcloud/sdk/go/hcloud"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "fsn1"
// 		_, err := hcloud.GetLocation(ctx, &hcloud.GetLocationArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		opt1 := 1
// 		_, err = hcloud.GetLocation(ctx, &hcloud.GetLocationArgs{
// 			Id: &opt1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetLocation(ctx *pulumi.Context, args *GetLocationArgs, opts ...pulumi.InvokeOption) (*GetLocationResult, error) {
	var rv GetLocationResult
	err := ctx.Invoke("hcloud:index/getLocation:getLocation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLocation.
type GetLocationArgs struct {
	// ID of the location.
	Id *int `pulumi:"id"`
	// Name of the location.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getLocation.
type GetLocationResult struct {
	// (string) City of the location.
	City string `pulumi:"city"`
	// (string) Country of the location.
	Country string `pulumi:"country"`
	// (string) Description of the location.
	Description string `pulumi:"description"`
	// (int) Unique ID of the location.
	Id int `pulumi:"id"`
	// (float) Latitude of the city.
	Latitude float64 `pulumi:"latitude"`
	// (float) Longitude of the city.
	Longitude float64 `pulumi:"longitude"`
	// (string) Name of the location.
	Name string `pulumi:"name"`
}
